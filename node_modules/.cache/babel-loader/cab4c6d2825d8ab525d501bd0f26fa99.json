{"ast":null,"code":"var _jsxFileName = \"/Users/dspatiyal/Desktop/corona-web-app/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#333fff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      label: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People ',\n        backgroundColor: ['rgba( 0 ,0 ,255 ,0.5)', 'rgba( 0 ,255 ,0 ,0.5)', 'rgba( 255,0 ,0 ,0.5)'],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/dspatiyal/Desktop/corona-web-app/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","console","log","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAE,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAmBC,IAAAA;AAAnB,GAAP;AAAqCC,EAAAA;AAArC,CAAD,KAAmD;AAC5D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMa,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEAE,IAAAA,QAAQ;AACX,GAPQ,EAOP,EAPO,CAAT;AASA,QAAMG,SAAS,GACXL,SAAS,CAACM,MAAV,gBACE,oBAAC,IAAD;AACF,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAACP,SAAS,CAACQ,GAAV,CAAe,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA7B,CADL;AAEFC,MAAAA,QAAQ,EAAC,CAAC;AACNf,QAAAA,IAAI,EAACK,SAAS,CAACQ,GAAV,CAAe,CAAC;AAAEZ,UAAAA;AAAF,SAAD,KAAmBA,SAAlC,CADC;AAENe,QAAAA,KAAK,EAAC,UAFA;AAGNC,QAAAA,WAAW,EAAC,SAHN;AAINC,QAAAA,IAAI,EAAC;AAJC,OAAD,EAKP;AACElB,QAAAA,IAAI,EAACK,SAAS,CAACQ,GAAV,CAAe,CAAC;AAAEX,UAAAA;AAAF,SAAD,KAAgBA,MAA/B,CADP;AAEEc,QAAAA,KAAK,EAAC,QAFR;AAGEC,QAAAA,WAAW,EAAC,KAHd;AAIEE,QAAAA,eAAe,EAAC,sBAJlB;AAKED,QAAAA,IAAI,EAAC;AALP,OALO;AAFP,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAiBK,IAlBT;AAqBA,QAAME,QAAQ,GACXnB,SAAS,gBAEJ,oBAAC,GAAD;AACA,IAAA,IAAI,EAAE;AACFe,MAAAA,KAAK,EAAE,CAAC,UAAD,EAAY,WAAZ,EAAwB,QAAxB,CADL;AAEFD,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,SADA;AAEPG,QAAAA,eAAe,EAAG,CACd,uBADc,EAEd,uBAFc,EAGd,sBAHc,CAFX;AAOPnB,QAAAA,IAAI,EAAC,CAACC,SAAD,EAAWE,SAAX,EAAqBD,MAArB;AAPE,OAAD;AAFR,KADN;AAaA,IAAA,OAAO,EAAE;AACLmB,MAAAA,MAAM,EAAG;AAACC,QAAAA,OAAO,EAAE;AAAV,OADJ;AAELC,MAAAA,KAAK,EAAG;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAG,oBAAmBpB,OAAQ;AAAlD;AAFH,KAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFI,GAoBL,IArBP;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC2B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,OAAO,GAAGgB,QAAH,GAAaV,SADzB,CADJ;AAKH,CA9DD;;AAgEA,eAAeX,KAAf","sourcesContent":["import React , {useState , useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line ,Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart= ({data :{confirmed ,deaths,recovered},country }) =>{\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() =>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        console.log(dailyData);\n\n        fetchAPI();\n    },[]);\n\n    const lineChart= (\n        dailyData.length \n        ?(<Line\n        data={{\n            labels:dailyData.map( ({ date }) => date),\n            datasets:[{\n                data:dailyData.map( ({ confirmed }) => confirmed),\n                label:'Infected',\n                borderColor:'#333fff',\n                fill:true,\n            },{\n                data:dailyData.map( ({ deaths }) => deaths),\n                label:'Deaths',\n                borderColor:'red',\n                backgroundColor:'rgba(255, 0, 0, 0.5)', \n                fill:true,\n            }], \n        }}\n        />) :null\n    );\n    \n    const barChart=(\n       confirmed\n        ? (\n            <Bar\n            data={{\n                label: ['Infected','Recovered','Deaths'],\n                datasets :[{\n                    label: 'People ',\n                    backgroundColor : [\n                        'rgba( 0 ,0 ,255 ,0.5)',\n                        'rgba( 0 ,255 ,0 ,0.5)',\n                        'rgba( 255,0 ,0 ,0.5)',\n                    ],\n                    data:[confirmed,recovered,deaths]\n                }]\n            }}\n            options={{\n                legend : {display :false},\n                title : {display :true ,text :`Current state in ${country}`},\n            }}\n            />\n        ) :null\n    )\n\n    return(\n        <div className={styles.container}>\n            {country ? barChart :lineChart}\n        </div>\n    )\n}\n\nexport default Chart; "]},"metadata":{},"sourceType":"module"}